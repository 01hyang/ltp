/*
   b_char.h   Generated by the Ballista(tm) Project data object compiler
   Copyright (C) 1998-2001  Carnegie Mellon University

   This program is free software; you can redistribute it and/or
   modify it under the terms of the GNU General Public License
   as published by the Free Software Foundation; either version 2
   of the License, or (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.

   File generated Friday, December 17 at 06:12 PM CST

TITLE
   b_char.h
*/

//include control
#ifndef B_CHAR_H
#define B_CHAR_H
#include <errno.h>
#include <iostream.h>
#include <stdio.h>
#include <stdlib.h>
#include <stream.h>
#include <string.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <unistd.h>
#include "bTypes.h"

 #include "values.h" 
 #include "bTypes.h"
 #define CLASSTYPE char
#define CLASSNAME b_char
#define CLASS_STRING "b_char"
#define CLASSPARENT paramAccess
#define NUMBER_OF_DIALS 1


class CLASSNAME:public CLASSPARENT
{
private:
  //CLASS DIAL SETTING STRING VARIABLES
  b_param _b_charTYPENAME;
b_param _b_charNUL;
int b_char_nul;
b_param _b_charSOH;
int b_char_soh;
b_param _b_charTAB;
int b_char_tab;
b_param _b_charLF;
int b_char_lf;
b_param _b_charCR;
int b_char_cr;
b_param _b_charDLE;
int b_char_dle;
b_param _b_charESC;
int b_char_esc;
b_param _b_charSPACE;
int b_char_space;
b_param _b_charCOMMA;
int b_char_comma;
b_param _b_charNUM0;
int b_char_num0;
b_param _b_charNUM9;
int b_char_num9;
b_param _b_charAT;
int b_char_at;
b_param _b_charBIGA;
int b_char_biga;
b_param _b_charBIGZ;
int b_char_bigz;
b_param _b_charLEFTSQBRKT;
int b_char_leftsqbrkt;
b_param _b_charAPST;
int b_char_apst;
b_param _b_charSMLA;
int b_char_smla;
b_param _b_charSMLZ;
int b_char_smlz;
b_param _b_charLEFTCUVBRKT;
int b_char_leftcuvbrkt;
b_param _b_charFF;
int b_char_ff;
  //TYPE VARIABLE TO SAVE VALUE FOR DESTRUCTION
  CLASSTYPE _theVariable;

 public:
  //CLASS DIAL SETTING STRING ACCESS METHODS
b_param *b_charNUL();
b_param *b_charSOH();
b_param *b_charTAB();
b_param *b_charLF();
b_param *b_charCR();
b_param *b_charDLE();
b_param *b_charESC();
b_param *b_charSPACE();
b_param *b_charCOMMA();
b_param *b_charNUM0();
b_param *b_charNUM9();
b_param *b_charAT();
b_param *b_charBIGA();
b_param *b_charBIGZ();
b_param *b_charLEFTSQBRKT();
b_param *b_charAPST();
b_param *b_charSMLA();
b_param *b_charSMLZ();
b_param *b_charLEFTCUVBRKT();
b_param *b_charFF();
  //CLASS CONSTRUCTOR
  CLASSNAME();

public:
  //Mandatory Methods
  b_param *typeName();           //returns the type of parameter
  virtual void *access(b_param data[]);
  virtual int commit(b_param tname);
  virtual int cleanup(b_param tname);
  
  virtual int numDials(b_param tname);
  virtual int numItems(b_param tname,int dialNumber);
  virtual b_param *paramName(b_param tname,int dialNumber, int position);

  virtual int distanceFromBase();
  virtual void typeList(b_param list[],int num);
  
};



#endif      //CLASSNAME_H
