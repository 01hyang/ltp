/*
   b_ptr_wchar.h   Generated by the Ballista(tm) Project data object compiler
   Copyright (C) 1998-2001  Carnegie Mellon University

   This program is free software; you can redistribute it and/or
   modify it under the terms of the GNU General Public License
   as published by the Free Software Foundation; either version 2
   of the License, or (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.

   File generated Friday, December 17 at 06:11 PM CST

TITLE
   b_ptr_wchar.h
*/

//include control
#ifndef B_PTR_WCHAR_H
#define B_PTR_WCHAR_H
#include <errno.h>
#include <iostream.h>
#include <stdio.h>
#include <stdlib.h>
#include <stream.h>
#include <string.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <unistd.h>
#include "bTypes.h"

 #include <wchar.h>
 #include "b_ptr_buf.h" 
 #define CLASSTYPE wchar_t*
#define CLASSNAME b_ptr_wchar
#define CLASS_STRING "b_ptr_wchar"
#define CLASSPARENT b_ptr_buf
#define NUMBER_OF_DIALS 3


class CLASSNAME:public CLASSPARENT
{
private:
  //CLASS DIAL SETTING STRING VARIABLES
  b_param _b_ptr_wcharTYPENAME;
b_param _b_ptr_wcharS1;
int b_ptr_wchar_s1;
b_param _b_ptr_wcharS4;
int b_ptr_wchar_s4;
b_param _b_ptr_wcharS16;
int b_ptr_wchar_s16;
b_param _b_ptr_wcharS8K;
int b_ptr_wchar_s8k;
b_param _b_ptr_wcharMAX;
int b_ptr_wchar_max;
b_param _b_ptr_wcharMIN;
int b_ptr_wchar_min;
b_param _b_ptr_wcharCHAR;
int b_ptr_wchar_char;
b_param _b_ptr_wcharNUM;
int b_ptr_wchar_num;
b_param _b_ptr_wcharTAB;
int b_ptr_wchar_tab;
b_param _b_ptr_wcharESC;
int b_ptr_wchar_esc;
b_param _b_ptr_wcharEMPTY;
int b_ptr_wchar_empty;
b_param _b_ptr_wcharSOME;
int b_ptr_wchar_some;
b_param _b_ptr_wcharFULL;
int b_ptr_wchar_full;
  //TYPE VARIABLE TO SAVE VALUE FOR DESTRUCTION
  CLASSTYPE _theVariable;

 public:
  //CLASS DIAL SETTING STRING ACCESS METHODS
b_param *b_ptr_wcharS1();
b_param *b_ptr_wcharS4();
b_param *b_ptr_wcharS16();
b_param *b_ptr_wcharS8K();
b_param *b_ptr_wcharMAX();
b_param *b_ptr_wcharMIN();
b_param *b_ptr_wcharCHAR();
b_param *b_ptr_wcharNUM();
b_param *b_ptr_wcharTAB();
b_param *b_ptr_wcharESC();
b_param *b_ptr_wcharEMPTY();
b_param *b_ptr_wcharSOME();
b_param *b_ptr_wcharFULL();
  //CLASS CONSTRUCTOR
  CLASSNAME();

public:
  //Mandatory Methods
  b_param *typeName();           //returns the type of parameter
  virtual void *access(b_param data[]);
  virtual int commit(b_param tname);
  virtual int cleanup(b_param tname);
  
  virtual int numDials(b_param tname);
  virtual int numItems(b_param tname,int dialNumber);
  virtual b_param *paramName(b_param tname,int dialNumber, int position);

  virtual int distanceFromBase();
  virtual void typeList(b_param list[],int num);
  
};



#endif      //CLASSNAME_H
