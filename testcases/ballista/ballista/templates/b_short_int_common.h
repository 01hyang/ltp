/*
   b_short_int_common.h   Generated by the Ballista(tm) Project data object compiler
   Copyright (C) 1998-2001  Carnegie Mellon University

   This program is free software; you can redistribute it and/or
   modify it under the terms of the GNU General Public License
   as published by the Free Software Foundation; either version 2
   of the License, or (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.

   File generated Friday, December 17 at 05:53 PM CST

TITLE
   b_short_int_common.h
*/

//include control
#ifndef B_SHORT_INT_COMMON_H
#define B_SHORT_INT_COMMON_H
#include <errno.h>
#include <iostream.h>
#include <stdio.h>
#include <stdlib.h>
#include <stream.h>
#include <string.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <unistd.h>
#include "bTypes.h"

 #include "values.h" 
 #include "bTypes.h"
 #define intBase unsigned short

 #define CLASSTYPE intBase
#define CLASSNAME b_short_int_common
#define CLASS_STRING "b_short_int_common"
#define CLASSPARENT paramAccess
#define NUMBER_OF_DIALS 1


class CLASSNAME:public CLASSPARENT
{
private:
  //CLASS DIAL SETTING STRING VARIABLES
  b_param _b_short_int_commonTYPENAME;
b_param _b_short_int_commonZERO;
int b_short_int_common_zero;
b_param _b_short_int_commonONE;
int b_short_int_common_one;
b_param _b_short_int_commonTWO;
int b_short_int_common_two;
b_param _b_short_int_commonFIFTEEN;
int b_short_int_common_fifteen;
b_param _b_short_int_commonSIXTEEN;
int b_short_int_common_sixteen;
b_param _b_short_int_commonSEVENTEEN;
int b_short_int_common_seventeen;
b_param _b_short_int_commonSC_PAGE;
int b_short_int_common_sc_page;
b_param _b_short_int_commonSIXTYFOUR;
int b_short_int_common_sixtyfour;
b_param _b_short_int_commonSIXTYFIVE;
int b_short_int_common_sixtyfive;
b_param _b_short_int_commonONE27;
int b_short_int_common_one27;
b_param _b_short_int_commonONE29;
int b_short_int_common_one29;
b_param _b_short_int_commonTWO55;
int b_short_int_common_two55;
b_param _b_short_int_commonTWO56;
int b_short_int_common_two56;
b_param _b_short_int_commonTWO57;
int b_short_int_common_two57;
b_param _b_short_int_commonI4K;
int b_short_int_common_i4k;
b_param _b_short_int_commonI8K;
int b_short_int_common_i8k;
b_param _b_short_int_commonI8193;
int b_short_int_common_i8193;
b_param _b_short_int_commonI16383;
int b_short_int_common_i16383;
b_param _b_short_int_commonMAXSHORT;
int b_short_int_common_maxshort;
  //TYPE VARIABLE TO SAVE VALUE FOR DESTRUCTION
  CLASSTYPE _theVariable;

 public:
  //CLASS DIAL SETTING STRING ACCESS METHODS
b_param *b_short_int_commonZERO();
b_param *b_short_int_commonONE();
b_param *b_short_int_commonTWO();
b_param *b_short_int_commonFIFTEEN();
b_param *b_short_int_commonSIXTEEN();
b_param *b_short_int_commonSEVENTEEN();
b_param *b_short_int_commonSC_PAGE();
b_param *b_short_int_commonSIXTYFOUR();
b_param *b_short_int_commonSIXTYFIVE();
b_param *b_short_int_commonONE27();
b_param *b_short_int_commonONE29();
b_param *b_short_int_commonTWO55();
b_param *b_short_int_commonTWO56();
b_param *b_short_int_commonTWO57();
b_param *b_short_int_commonI4K();
b_param *b_short_int_commonI8K();
b_param *b_short_int_commonI8193();
b_param *b_short_int_commonI16383();
b_param *b_short_int_commonMAXSHORT();
  //CLASS CONSTRUCTOR
  CLASSNAME();

public:
  //Mandatory Methods
  b_param *typeName();           //returns the type of parameter
  virtual void *access(b_param data[]);
  virtual int commit(b_param tname);
  virtual int cleanup(b_param tname);
  
  virtual int numDials(b_param tname);
  virtual int numItems(b_param tname,int dialNumber);
  virtual b_param *paramName(b_param tname,int dialNumber, int position);

  virtual int distanceFromBase();
  virtual void typeList(b_param list[],int num);
  
};



#endif      //CLASSNAME_H
