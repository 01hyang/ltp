#! /bin/sh

#  Copyright (c) International Business Machines  Corp., 2002
#
#  This program is free software;  you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either version 2 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY;  without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See
#  the GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program;  if not, write to the Free Software
#  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA

# 12/05/02  Port to bash -Robbie Williamson <robbiew@us.ibm.com>
# 02/05/03  Modified - Manoj Iyer <manjo@mail.utexas.edu> use USCTEST macros
#           fixed bugs.

##################################################################
# case 9: Test setlogmask() with LOG_UPTO macro.                 #
#                                                                #
#         o Use setlogmask() with LOG_UPTO macro to set some     #
#            priority level.                                     #
#         o Send message which is lower priority than the one    #
#           set above, which should not be logged.               #
##################################################################

syslog_case9()
{
        #set the trap to handle signals.
        trap '
                tst_resm TBROK "Testing is terminating due to a signal"
                exit 1
        ' 1 2 3 6 11 15

        tst_resm  TINFO "syslog: Testing setlogmask() with LOG_UPTO macro"
        echo

        # Create the configuration file specific to this test case.
        echo "user.debug       /var/log/messages" > /etc/syslog.conf

	#Restart syslog
	kill -1 `ps -ef | grep syslogd | grep -v grep | awk '{ print $2 }'`

        allow1=`grep -c "syslogtst: error level is logged" /var/log/messages`
        donot_allow1=`grep -c "syslogtst: warning level not to be logged" /var/log/messages`

        syslogtst 9 2>/dev/null
        if [ $? -ne 0 ]; then
                status_flag=1
                return
        fi
        sleep 2

        allow2=`grep -c "syslogtst: error level is logged" /var/log/messages`
        donot_allow2=`grep -c "syslogtst: warning level not to be logged" /var/log/messages`

        diff1=$(( $allow2 - $allow1 ))
        if [ $diff1 -ne 1 ]; then
                tst_resm TBROK "Expected message is not logged...."
                status_flag=1
                return
        fi

        diff2=$(( $donot_allow2 - $donot_allow1 ))
        if [ $diff2 -ne 0 ]; then
                tst_resm TBROK "Unexpected message is logged..."
                status_flag=1
        fi
}

export TST_TOTAL=1
export TST_COUNT=1
export TCID=$(basename $0)

status_flag=0

tst_resm TINFO " Test setlogmask() with LOG_UPTO macro."
tst_resm TINFO " o Use setlogmask() with LOG_UPTO macro to set some priority"
tst_resm TINFO "   level."
tst_resm TINFO " o Send message which is lower priority than the one"
tst_resm TINFO "   set above, which should not be logged"

#Back up syslog.conf
if ! [ -a /etc/syslog.conf ]
then
    tst_resm TBROK "/etc/syslog.conf not found!"
else
	cp /etc/syslog.conf /etc/syslog.conf.bak09
fi

syslog_case9

if [ $status_flag -eq 0 ]
then
	tst_resm TPASS "lower priority message not logged."
else
	tst_resm TFAIL "lower priority message is logged."
fi

#Restore syslog.conf
mv /etc/syslog.conf.bak09 /etc/syslog.conf

#Restart syslog
kill -1 `ps -ef | grep syslogd | grep -v grep | awk '{ print $2 }'`

exit $status_flag
