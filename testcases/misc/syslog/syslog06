#! /bin/sh

#  Copyright (c) International Business Machines  Corp., 2002
#
#  This program is free software;  you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either version 2 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY;  without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See
#  the GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program;  if not, write to the Free Software
#  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA

# 12/05/02  Port to bash -Robbie Williamson <robbiew@us.ibm.com>

##################################################################
# case 6: Test the logging option: LOG_NDELAY                    #
#                                                                #
#         o Do openlog() without LOG_NDELAY option.              #
#         o open a file and check the returned file descriptor   #
#           It should be 3.                                      #
#         o Now do openlog() with LOG_NDELAY option.             #
#         o open a file and check the returned file descriptor.  #
#           It should be greater than 3.                         #
##################################################################

syslog_case6()
{
        #set the trap to handle signals.
        trap '
                echo Testing is terminating due to a signal...
                exit 1
        ' 1 2 3 6 11 15

        echo
        echo "syslog: Testing the log option: LOG_NDELAY..."
        echo

        # Create the configuration file specific to this test case.
        # For this case, it's a dummy one. No use of it.
        echo "user.info        /var/log/messages" > /etc/syslog.conf

	#Restart syslog
	kill -1 `ps -ef | grep syslogd | grep -v grep | awk '{ print $2 }'`

        # Just call syslogtst. It will do everything.
        # It will return 0 to indicate that test has passed.

        ./syslogtst 6 2>/dev/null
        if [[ $? -ne 0 ]]; then
                status_flag=1
        fi
}

echo start $0
echo "----------------------------------------------------------------"
status_flag=0
syslog_case6

#Back up /etc/syslog.conf
cp /etc/syslog.conf /etc/syslog.conf.bak06

if [ $status_flag -eq 0 ]
then
	echo
	echo $0 "PASSED"
else
	echo
	echo $0 "FAILED"
fi
echo "----------------------------------------------------------------"

#Restore syslog.conf
mv /etc/syslog.conf.bak06 /etc/syslog.conf

#Restart syslog
kill -1 `ps -ef | grep syslogd | grep -v grep | awk '{ print $2 }'`

exit $status_flag
