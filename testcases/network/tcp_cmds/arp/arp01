#!/bin/sh
#******************************************************************************
#
#   Copyright (c) International Business Machines  Corp., 2000
#
#   This program is free software;  you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation; either version 2 of the License, or
#   (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY;  without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See
#   the GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with this pronram;  if not, write to the Free Software
#   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
#
#
#
#  FILE   : arp
#
#  PURPOSE: To test the basic functionality of `arp`.
#
#  SETUP: The "RHOST" setting should be exported to be the hostname of
#         another machine on the same subnet.  Otherwise, the hostname
#         of the tested machine will be used.
#
#  HISTORY:
#    03/01 Robbie Williamson (robbiew@us.ibm.com)
#      -Ported
#
#-----------------------------------------------------------------------
#Uncomment line below for debug output.
#trace_logic=${trace_logic:-"set -x"}
$trace_logic

RHOST=${RHOST:-`hostname`}
SLEEPTIME=${SLEEPTIME:-1}
NUMLOOPS=${NUMLOOPS:-20}

#-----------------------------------------------------------------------
#
# FUNCTION:  do_setup
#
#-----------------------------------------------------------------------

do_setup()
{
   $trace_logic

   LUSER=`id | tr -s '()' '  ' | awk '{print $2}'`
   [ "$LUSER" = "root" ] || end_testcase "Must be root to run this test!"
}

#-----------------------------------------------------------------------
#
# FUNCTION:  do_test
#
#-----------------------------------------------------------------------

do_test()
{
   $trace_logic

   COUNT=1
   while [ $COUNT -le $NUMLOOPS ]
   do
      arp -a
      [[ $? -eq 0 ]] || end_testcase "arp -a failed"
      COUNT=`expr $COUNT + 1`
   done

   sleep $SLEEPTIME

   # PURPOSE:  stress the automatic creation of arp entries by pinging a host 
   #           and deleting the arp entry again.

   COUNT=1
   while [ $COUNT -le $NUMLOOPS ]
   do
      ping -c1 $RHOST
      [ $? = 0 ] || end_testcase "ping $RHOST failed"
      arp -a | grep $RHOST
      [ $? = 0 ] || end_testcase "arp -a failed"
      arp -d $RHOST
      [ $? = 0 ] || end_testcase "arp -d $RHOST failed"
      COUNT=`expr $COUNT + 1`
      sleep $SLEEPTIME
   done
}

#=============================================================================
# FUNCTION NAME:        end_testcase
#
# FUNCTION DESCRIPTION: Clean up
#
# PARAMETERS:           string, IF AND ONLY IF the testcase fails
#
# RETURNS:              None.
#=============================================================================

end_testcase()
{
   $trace_logic

   [ $# = 0 ] && { echo "Test Successful"; exit 0; }
   echo "Test Failed: $@"
   exit 1
}

#-----------------------------------------------------------------------
# FUNCTION: MAIN
# PURPOSE:  To invoke the functions to perform the tasks outlined in the
#           prologue.
# INPUT:    None.
# OUTPUT:   None.
#-----------------------------------------------------------------------
do_setup
do_test
end_testcase
