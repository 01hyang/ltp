<!-- ...................................................................... -->
<!-- File environment.dtd ................................................. -->
<!-- 
        This material may be distributed only subject to the terms and 
        conditions set forth in the Open Publication License, v1.0 or later 
        (the latest version is currently available at 
        http://www.opencontent.org/openpub/).  Distribution of substantively 
        modified version of this document is prohibited without the explicit 
        permission of the copyright holder.

        Other company, product, or service names may be trademarks or service 
        marks of others.
-->

<chapter>
  <title>Environmental Requirements</title>
  <section>
    <title>Software</title>
    <para>
In order to get a meaningful test run of an HPI implementation, the tester
will need to first setup the target HPI implementation as specified by that
implementations documentation.
    </para>
    <para>
In addition to a properly configured HPI implementation, the test suite assumes
that the system under test supports base POSIX functionality and has a header
file in the normal system include path named "SaHpi.h".
    </para>
    <para>
If the implementation installs the HPI header file in a different location or
with a different name, a link will need to be created to SaHpi.h in the default
system search path for include files.  (On linux /usr/include/SaHpi.h would
be work.)
    </para>
  </section>
  <section>
    <title>Hardware</title>
    <para>
Unless the target HPI implementation provides a mechnism for generating 
fake hardware access (like the "dummy" plug-in in OpenHPI), then HPI
compliant hardware will need to be installed.  If a specific test case is
not able to test a feature (for example a watchdog timer test that can not
find an appropriate watchdog device via the HPI interface) then the test is
reported as a failure.
    </para>
  </section>
</chapter>
