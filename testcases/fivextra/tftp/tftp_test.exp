#
#  (C) Copyright IBM Corp. 2004
#
#  This program is free software;  you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either version 2 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY;  without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See
#  the GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program;  if not, write to the Free Software
#  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
#

###########################################################################
# name of file  : tftp_test.exp                                           #
# description   : expect file help to do tftp test                        #
###########################################################################

#expect test.exp --- tftpserver  afile  action  tmode 

set ETCTMP $env(TCTMP)
set tftpserver [lindex $argv 0] 
set tmode [lindex $argv 3] 
set action [lindex $argv 2] 
set afile [lindex $argv 1] 

#send_user "tftpserver=$tftpserver  afile=$afile  action=$action tmode=$tmode \n"
eval "cd $ETCTMP"

spawn tftp 
expect  "tftp> "  {} 

send "verbose\r"
expect -re "Verbose mode on(.*)tftp> $" {}

send "connect $tftpserver\r"
expect -re "Connected to(.*)tftp> $" {
} timeout { 
	exec echo "tftp connect error" > $ETCTMP/error.txt
	exit 1 
}

send "$tmode\r"
expect -re "mode set to(.*)tftp> $" {
} timeout { 
	exec echo "tftp set mode error" > $ETCTMP/error.txt
	exit 2
}

if {"$action"=="get"} {
	send "$action $afile\r"
	expect -re "getting from(.*)Received(.*)tftp> $" {
#		send_user "=======\n $expect_out(0,string)\n ======= "
	} -re "(.*)File not found(.*)tftp> $" {
		exec echo "tftp $action $afile, file not found" > $ETCTMP/error.txt
		exit 3
	} -re "(.*)Error code 2: Access violation(.*)tftp> $" {
		exec echo "tftp $action $afile, Access violation" > $ETCTMP/error.txt
		exit 3
	} timeout { 
		exec echo "tftp $action timeout" > $ETCTMP/error.txt
		exit 3
	}	
} else {
	send "$action $afile\r"
	expect -re "putting (.*)Sent(.*)tftp> $" {

	} timeout { 
		exec echo "tftp $action timeout" > $ETCTMP/error.txt
		exit 3
	}		
}

close
exit 0

