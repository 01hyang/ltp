## LTP scenario file for _EXTEND_30_base_ia64
## Generated on 5 August 2004.
##
## This file should be saved in the ltp directory as
##	runtest/extend30baseia64.scenario
##
## If there are specific tests you do NOT want to run, 
## create a file called
##	runtest/extend30baseia64.exclude
##
## and list those tests there. (In this way you will not
## need to edit this file every time you re-cerate it.)
##
## Run the following to execute the LTP in the standard FIV manner
##	./run_extended_ltp.sh extend30baseia64
##

##
## rpm verify these packages
##
## NOTE! THIS IS AN EXPERIMENTAL SECTION OF THE SCENARIO FILE.
##       MANY ERRORS MAY BE GENERATED. LET'S GIVE IT A TRY.
##
pkgchk_busybox              	pkgcheck.sh busybox
pkgchk_busybox-links        	pkgcheck.sh busybox-links
pkgchk_cracklib             	pkgcheck.sh cracklib
pkgchk_devs                 	pkgcheck.sh devs
pkgchk_dhcp-base            	pkgcheck.sh dhcp-base
pkgchk_dhcp-client          	pkgcheck.sh dhcp-client
pkgchk_dhcp-relay           	pkgcheck.sh dhcp-relay
pkgchk_dhcp-server          	pkgcheck.sh dhcp-server
pkgchk_dmidecode            	pkgcheck.sh dmidecode
pkgchk_dosfstools           	pkgcheck.sh dosfstools
pkgchk_e2fsprogs            	pkgcheck.sh e2fsprogs
pkgchk_efibootmgr           	pkgcheck.sh efibootmgr
pkgchk_eject                	pkgcheck.sh eject
pkgchk_elilo                	pkgcheck.sh elilo
pkgchk_filesystem           	pkgcheck.sh filesystem
pkgchk_fluxbox              	pkgcheck.sh fluxbox
pkgchk_gawk                 	pkgcheck.sh gawk
pkgchk_gdb                  	pkgcheck.sh gdb
pkgchk_gdbm                 	pkgcheck.sh gdbm
pkgchk_glibc                	pkgcheck.sh glibc
pkgchk_glibc-html           	pkgcheck.sh glibc-html
pkgchk_glibc-i18ndata       	pkgcheck.sh glibc-i18ndata
pkgchk_glibc-info           	pkgcheck.sh glibc-info
pkgchk_glibc-locale         	pkgcheck.sh glibc-locale
pkgchk_glibc-profile        	pkgcheck.sh glibc-profile
pkgchk_gnu-efi              	pkgcheck.sh gnu-efi
pkgchk_gpm                  	pkgcheck.sh gpm
pkgchk_java14-jre           	pkgcheck.sh java14-jre
pkgchk_java14-sdk           	pkgcheck.sh java14-sdk
pkgchk_jpeg                 	pkgcheck.sh jpeg
pkgchk_km_drm               	pkgcheck.sh km_drm
pkgchk_libjpeg              	pkgcheck.sh libjpeg
pkgchk_libpng               	pkgcheck.sh libpng
pkgchk_libstdcxx            	pkgcheck.sh libstdcxx
pkgchk_mfonts               	pkgcheck.sh mfonts
pkgchk_mfont_aix_ja         	pkgcheck.sh mfont_aix_ja
pkgchk_mfont_aix_sc         	pkgcheck.sh mfont_aix_sc
pkgchk_mfont_aix_tc         	pkgcheck.sh mfont_aix_tc
pkgchk_mfont_suppl          	pkgcheck.sh mfont_suppl
pkgchk_mfont_tt_wt-mtsans_j 	pkgcheck.sh mfont_tt_wt-mtsans_j
pkgchk_mfont_tt_wt-mtsans_k 	pkgcheck.sh mfont_tt_wt-mtsans_k
pkgchk_mfont_tt_wt-mtsans_s 	pkgcheck.sh mfont_tt_wt-mtsans_s
pkgchk_mfont_tt_wt-mtsans_t 	pkgcheck.sh mfont_tt_wt-mtsans_t
pkgchk_mfont_tt_wt-tnrwt_j  	pkgcheck.sh mfont_tt_wt-tnrwt_j
pkgchk_mfont_tt_wt-tnrwt_k  	pkgcheck.sh mfont_tt_wt-tnrwt_k
pkgchk_mfont_tt_wt-tnrwt_s  	pkgcheck.sh mfont_tt_wt-tnrwt_s
pkgchk_mfont_tt_wt-tnrwt_t  	pkgcheck.sh mfont_tt_wt-tnrwt_t
pkgchk_modutils             	pkgcheck.sh modutils
pkgchk_ncurses              	pkgcheck.sh ncurses
pkgchk_NVIDIA_GLX           	pkgcheck.sh NVIDIA_GLX
pkgchk_NVIDIA_kernel        	pkgcheck.sh NVIDIA_kernel
pkgchk_pam                  	pkgcheck.sh pam
pkgchk_termcap              	pkgcheck.sh termcap
pkgchk_terminfo             	pkgcheck.sh terminfo
pkgchk_timezone             	pkgcheck.sh timezone
pkgchk_unzip                	pkgcheck.sh unzip
pkgchk_utempter             	pkgcheck.sh utempter
pkgchk_util-linux           	pkgcheck.sh util-linux
pkgchk_xdevel               	pkgcheck.sh xdevel
pkgchk_xextra               	pkgcheck.sh xextra
pkgchk_xf86-freetype2       	pkgcheck.sh xf86-freetype2
pkgchk_xf86-xfbdev          	pkgcheck.sh xf86-xfbdev
pkgchk_xf86-xvesa           	pkgcheck.sh xf86-xvesa
pkgchk_xf86driver-options   	pkgcheck.sh xf86driver-options
pkgchk_xf86_glx             	pkgcheck.sh xf86_glx
pkgchk_xfnt100              	pkgcheck.sh xfnt100
pkgchk_xfntcyr              	pkgcheck.sh xfntcyr
pkgchk_xfntscl              	pkgcheck.sh xfntscl
pkgchk_XFree86-compat-libs  	pkgcheck.sh XFree86-compat-libs
pkgchk_xloader              	pkgcheck.sh xloader
pkgchk_xloadimage           	pkgcheck.sh xloadimage
pkgchk_xman                 	pkgcheck.sh xman
pkgchk_xmodules             	pkgcheck.sh xmodules
pkgchk_xshared              	pkgcheck.sh xshared
pkgchk_xxprt                	pkgcheck.sh xxprt
pkgchk_zip                  	pkgcheck.sh zip
pkgchk_zlib                 	pkgcheck.sh zlib

##
## test suite tbd or n/a ...
##
# xf86-xvesa              	-n/a-	OutPlan
# xf86driver-options      	-n/a-	OutPlan
# xf86_glx                	china	OutPlan
# XFree86-compat-libs     	china	OutPlan
# xxprt                   	china	OutPlan

##
## LTP tests follow ...
##
busybox                 	busybox.sh
cracklib                	cracklib_tests.sh
#dmidecode               	dmidecode_test.sh
dosfstools              	dosfstools.sh
efibootmgr              	notice Please ensure the SUT is usoing the EXTEND version of this program.
eject                   	eject.sh
gdbm                    	gdbm.sh
glibc                   	glibc.sh
jpeg                    	jpeg.sh
libpng                  	testpng.sh
libstdcxx               	libstdcxx.sh
modutils-4              	notice rmmod is tested by modprobe.sh and insmod.sh
pam                     	pam_tests.sh
utempter                	utempter_tests.sh
util-linux              	util-linux.sh # there is also a manual test that should be run
zlib                    	zlib.sh


## CSDL:
## Need test separately
#dhcp-base               	omshell_tests.sh
#dhcp-client             	dhclient_tests.sh
#dhcp-relay              	dhcrelay_tests.sh
#dhcp-server             	dhcp-server.sh



## CSDL:
## Need to start X server when testing the following test.
#mfonts-1                	fontcheck.sh -estf wt-mtsans_j -d /usr/share/fonts/truetype -l "^ja.*"
#mfonts-2                	fontcheck.sh -estf wt-tnrwt_j -d /usr/share/fonts/truetype -l "^ja.*"
#mfonts-3                	notice there is also a manual test that should be run
#mfont_aix_ja            	fontcheck.sh -estf  aix_ja -d  "/usr/share/fonts/aix" -l "^ja.*"
#mfont_aix_sc            	fontcheck.sh -eastf  aix_sc -d  "/usr/share/fonts/aix" -c "8859-1"
#mfont_aix_tc            	fontcheck.sh -estf  aix_tc -d  "/usr/share/fonts/aix" -l "^zh_TW.*"
#mfont_suppl-1           	fontcheck.sh -stvf  suppl -d  "/usr/share/fonts"  -c "gbk"
#mfont_suppl-2           	fontcheck.sh -stvf  suppl -d  "/usr/share/fonts"  -c "big5"
#mfont_tt_wt-mtsans_j    	fontcheck.sh -estf wt-mtsans_j -d /usr/share/fonts/truetype -l "^ja.*"
#mfont_tt_wt-mtsans_k    	fontcheck.sh -estf wt-mtsans_k -d "/usr/share/fonts/truetype" -l "^ko.*
#mfont_tt_wt-mtsans_s    	fontcheck.sh -estf wt-mtsans_s -d "/usr/share/fonts/truetype" -l "^zh_CN."
#mfont_tt_wt-mtsans_t    	fontcheck.sh -estf wt-mtsans_t -d "/usr/share/fonts/truetype" -l "^zh_TW."
#mfont_tt_wt-tnrwt_j     	fontcheck.sh -estf wt-tnrwt_j -d /usr/share/fonts/truetype -l "^ja.*"
#mfont_tt_wt-tnrwt_k     	fontcheck.sh -estf wt-tnrwt_k -d "/usr/share/fonts/truetype" -l "^ko.*"
#mfont_tt_wt-tnrwt_s     	fontcheck.sh -estf wt-tnrwt_s -d "/usr/share/fonts/truetype" -l "^zh_CN.*"
#mfont_tt_wt-tnrwt_t     	fontcheck.sh -estf wt-tnrwt_t -d "/usr/share/fonts/truetype" -l "^zh_TW.*"
#xfnt100                 	fontcheck.sh -eastf 100dpi
#xfntcyr                 	fontcheck.sh -eastf cyrillic -l "^ru.*"
#xfntscl-1               	fontcheck.sh -estf Speedo
#xfntscl-2               	fontcheck.sh -estf Type1
#xfntscl-3               	fontcheck.sh -estf truetype



##
## LTPpkgcheck tests follow ...
##
# busybox-links           	-n/a-	Done
# glibc-html              	-n/a-	Done
# glibc-info              	-n/a-	Done

##
## LTPbase tests follow ...
##
# kernel                  	-n/a-	Done
# termcap                 	-n/a-	Done

##
## LSB tests follow ...
##
# glibc-i18ndata          	-n/a-	Done
# glibc-locale            	-n/a-	Done
# terminfo                	-n/a-	Done
# timezone                	-n/a-	Done

##
## Manual tests follow ...
##
# fluxbox                 	rcp	Done
# gpm                     	rcp	Done
# ncurses                 	robb	Done
# xextra                  	china	Done
# xf86                    	robb	Done
# xf86-xfbdev             	rcp	Done
# xloadimage              	rcp	Done
# xman                    	china	Done
# xshared                 	china	Done

##
## Other tests follow ...
##
# java14-jre              	paulw	Done
# java14-sdk              	paulw	Done

##
## Implicit tests follow ...
##
# devs                    	-n/a-	Implicit
# elilo                   	-n/a-	Implicit
# filesystem              	-n/a-	Implicit
# gnu-efi                 	-n/a-	Implicit
# km_drm                  	china	Implicit
# libjpeg                 	-n/a-	Implicit
# NVIDIA_GLX              	-n/a-	Implicit
# NVIDIA_kernel           	-n/a-	Implicit
# xf86-freetype2          	-n/a-	Implicit
# xloader                 	-n/a-	Implicit
# xmodules                	-n/a-	Implicit

##
## Developer tests follow ...
##
# xdevel                  	-n/a-	DevTest

